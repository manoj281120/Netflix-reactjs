name: CI/CD Pipeline for Docker & EKS

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and Push Docker image to Docker Hub
      - name: Build and Push Docker Image
        run: |
          docker build -t samba1232/img2 .
          docker push samba1232/img2

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Checkout the code again (for deployment)
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      # Install eksctl to create and manage the EKS cluster
      - name: Install eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/v0.106.0/eksctl_Linux_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

      # Set up kubectl to interact with Kubernetes
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.27.0/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      # Create the EKS cluster using eksctl
      - name: Create EKS Cluster
        run: |
          eksctl create cluster --name movie-cluster --region ap-southeast-2 --nodegroup-name standard-workers --node-type t3.micro --nodes 1 --nodes-min 1 --nodes-max 3 --managed

      # Get kubectl credentials for the EKS cluster
      - name: Set up kubectl
        run: |
          aws eks --region ap-southeast-2 update-kubeconfig --name movie-cluster

      # Deploy Docker image to Kubernetes on EKS
      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yml
          kubectl apply -f service.yml
          kubectl rollout status deployment netflix
