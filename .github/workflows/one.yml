name: Deploy to EKS

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up AWS credentials
    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SECRET_KEY }}
        aws-region: ap-southeast-2

    # Install eksctl and kubectl
    - name: Install eksctl and kubectl
      run: |
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
        sudo mv /tmp/eksctl /usr/local/bin
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    # Create EKS cluster using eksctl
    - name: Create EKS Cluster
      run: |
        eksctl create cluster \
          --name zenistu-cluster \
          --version 1.28 \
          --region ap-southeast-2 \
          --nodegroup-name standard-workers \
          --node-type t3.small \
          --nodes 3 \
          --nodes-min 1 \
          --nodes-max 3 \
          --managed

    # Authenticate kubectl with EKS
    - name: Update kubeconfig
      run: |
        aws eks --region ap-southeast-2 update-kubeconfig --name zenistu-cluster

    # Build and push Docker image to DockerHub
    # Deploy to EKS
    - name: Deploy to EKS
      run: |
        kubectl apply -f deployment.yml
        kubectl apply -f service.yml

    # Check deployment status
    - name: Verify pods are running
      run: |
        kubectl get pods -o wide
        kubectl get svc
